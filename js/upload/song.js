function previewImage(event) { const reader = new FileReader(); reader.onload = function() { const preview = document.getElementById('cover-preview'); preview.src = reader.result; preview.style.display = 'block'; }; reader.readAsDataURL(event.target.files[0]); } function previewAudio(event) { const reader = new FileReader(); reader.onload = function() { const preview = document.getElementById('audio-preview'); preview.src = reader.result; preview.style.display = 'block'; }; reader.readAsDataURL(event.target.files[0]); } async function validate(){ const code = document.querySelector("code"); const audio = document.querySelector("audio"); const img = document.getElementById("cover-preview"); function error(elem, txt){ elem.style.outline = "blue solid 2px"; elem.focus(); elem.addEventListener("change", () => fixed()); elem.addEventListener("keydown", () => fixed()); code.innerText = txt; function fixed(){ code.innerText = ""; elem.style = ""; } throw new Error(""); } const form = document.upload; try { if(form.artist.value == "") form.artist.value = ms.query("aid.name", "id.aid"); if(!form.artist.value.toLowerCase().includes(ms.query("aid.name", "id.aid").toLowerCase())) error(form.artist, "Your artist account is not included"); if(form.title.value == "") error(form.title, "Type in a valid song title"); if(form.genre.value.toLowerCase() == "select a genre" || form.genre.value.toLowerCase() == "") error(form.genre, "Add a valid genre"); if(!form.cover.files[0]) error(form.cover, "Add cover art"); if(img.naturalWidth != img.naturalHeight) error(img, "Image must be a perfect square"); if(!form.file.files[0]) error(form.file, "Add audio file"); const info = {aid: form.artist.value.comma(), name: form.title.value, genre: form.genre.value, feat: form.feat.value ? form.feat.value : undefined, img: form.cover.files[0], url: form.file.files[0], length : audio.duration}; await rtdb.usid(info); } catch (err) { console.error(err); } } function IR(){ if(ms.get('id')) { if(!ms.get('id', "aid")) return warn('no_aid'); } else return warn('no_uid'); function T(){ const ref = Array(3).fill(0).map(useRef); useEffect(() => { ref[2].current.value = ms.query("aid", "id/aid").name; ref[0].current.onchange = (event) => previewImage(event); ref[1].current.onchange = (event) => previewAudio(event); }); return <form name="upload" method="post" enctype="multipart/form-data"> <code style={{fontSize: 'large', textTransform: 'uppercase', fontWeight: 'bold'}}></code> <label for="artist">Artists:</label> <input ref={ref[2]} type="text" id="artist" placeholder="Seperate names with commas" name="artist" required/> <label for="title">Title:</label> <input type="text" id="title" name="title" required/> <label for="featured-artists">Featured Artists:</label> <input type="text" id="featured-artists" name="feat" placeholder="Leave empty if none"/> <label for="genre">Genre:</label> <select id="genre" name="genre" required>{Genres}</select> <label for="cover">Cover Art:</label> <input type="file" id="cover" name="cover" accept="image/*" ref={ref[0]} required/> <img id="cover-preview" src="" alt="Cover Art Preview"/> <label for="file">Music File:</label> <input type="file" id="file" name="file" accept="audio/*" ref={ref[1]} required/> <audio id="audio-preview" src=""></audio> <button type="button" onClick={validate}>Upload</button> </form> } return render(<T/>, display) }